name: deploy

on:
  push:
    branches:
      - develop
      - feature/9

env:
  ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  ECR_REPOSITORY: ahachul
  AWS_REGION: ap-northeast-2
  IMAGE_TAG: latest


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ahachul_backend/gradlew
        shell: bash

      - name: Build with Gradle
        run: cd ./ahachul_backend && ./gradlew clean build -x test
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Login to Amazon ECR   # private repository
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "success push to ecr: name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull Image and docker run
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker stop $ECR_REPOSITORY && docker rm $ECR_REPOSITORY && docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker run -d -p 8080:8080 --name $ECR_REPOSITORY --restart always $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
